{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/viya/dev/cp-fileupload/src/utils/cn.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/viya/dev/cp-fileupload/src/components/Icon.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { type IconName } from \"../icons/generated/icon-name\";\nimport { cn } from \"../utils/cn\";\n\nexport { IconName };\n\nexport const iconVariants = cva([\"inline shrink-0 self-center\"], {\n  variants: {\n    size: {\n      xs: \"w-3 h-3\",\n      sm: \"w-3.5 h-3.5\",\n      md: \"w-4 h-4\",\n      lg: \"w-5 h-5\",\n    },\n  },\n});\n\nexport interface IconProps extends React.SVGProps<SVGSVGElement> {\n  name: IconName;\n  size?: VariantProps<typeof iconVariants>[\"size\"];\n  \"data-test-id\"?: string;\n  slot?: string;\n}\n\n/**\n * A component for displaying SVG icons from the icon library. {@link https://compass-ui.dev/?path=/docs/media-icon |  **Storybook docs**}\n * @param name - Name of the icon to display from the icon library.\n * @param size - Size of the icon ('xs', 'sm', 'md', 'lg', default: 'md').\n * @param slot - A slot indicates an element that will be projected into the shadow DOM of a custom element. {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots#adding_flexibility_with_slots}\n */\nexport const Icon = forwardRef<SVGSVGElement, IconProps>(\n  (\n    {\n      size = \"md\",\n      name,\n      className,\n      \"aria-label\": ariaLabel,\n      \"data-test-id\": dataTestId,\n      slot,\n      ...props\n    },\n    ref\n  ) => (\n    <svg\n      {...props}\n      ref={ref}\n      aria-label={ariaLabel || name}\n      data-test-id={dataTestId}\n      className={cn(\n        iconVariants({ size }),\n        name === \"loader\" && \"animate-spin\",\n        className\n      )}\n      // @ts-expect-error https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots#adding_flexibility_with_slots\n      slot={slot}\n    >\n      <use href={`/icons/sprite.svg#${name}`} />\n    </svg>\n  )\n);\nIcon.displayName = \"Icon\";\n\nexport type IconType = typeof Icon;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;;;;;;AALA;;;;;AASO,MAAM,eAAe,CAAA,GAAA,4JAAA,CAAA,MAAG,AAAD,EAAE;IAAC;CAA8B,EAAE;IAC/D,UAAU;QACR,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;AACF;AAeO,MAAM,qBAAO,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAC3B,CACE,EACE,OAAO,IAAI,EACX,IAAI,EACJ,SAAS,EACT,cAAc,SAAS,EACvB,gBAAgB,UAAU,EAC1B,IAAI,EACJ,GAAG,OACJ,EACD,oBAEA,qKAAC;QACE,GAAG,KAAK;QACT,KAAK;QACL,cAAY,aAAa;QACzB,gBAAc;QACd,WAAW,CAAA,GAAA,2GAAA,CAAA,KAAE,AAAD,EACV,aAAa;YAAE;QAAK,IACpB,SAAS,YAAY,gBACrB;QAEF,2IAA2I;QAC3I,MAAM;kBAEN,cAAA,qKAAC;YAAI,MAAM,CAAC,kBAAkB,EAAE,MAAM;;;;;;;;;;;AAI5C,KAAK,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/viya/dev/cp-fileupload/src/components/Tooltip.tsx"],"sourcesContent":["\"use client\";\n\nimport * as RTooltip from \"@radix-ui/react-tooltip\";\nimport {\n  TooltipProvider as RadixTooltipProvider,\n  TooltipProviderProps as RadixTooltipProviderProps,\n} from \"@radix-ui/react-tooltip\";\nimport { cn } from \"../utils/cn\";\nimport { NvSide } from \"../utils/types\";\nimport { Icon } from \"./Icon\";\nimport { cva } from \"class-variance-authority\";\n\nexport interface TooltipProps extends RTooltip.TooltipProps {\n  /* Label to the tooltip content */\n  title?: string | React.ReactNode;\n  /* Primary content of the tooltip */\n  content: string | React.ReactNode;\n  appearance?: \"dark\" | \"light\";\n  side?: NvSide;\n  offset?: number;\n  withArrow?: boolean;\n  align?: RTooltip.TooltipContentProps[\"align\"];\n  \"data-test-id\"?: string;\n  className?: string;\n}\n\nconst tooltipVariants = cva(\n  [\n    \"data-[state=delayed-open]:data-[side=top]:animate-slideDownAndFade\",\n    \"data-[state=delayed-open]:data-[side=right]:animate-slideLeftAndFade\",\n    \"data-[state=delayed-open]:data-[side=left]:animate-slideRightAndFade\",\n    \"data-[state=delayed-open]:data-[side=bottom]:animate-slideUpAndFade\",\n    \"z-50 w-full max-w-60 select-none rounded-lg border\",\n    \"text-xs font-normal\",\n  ],\n  {\n    variants: {\n      appearance: {\n        dark: \"border-gray-900 bg-gray-800 text-gray-300 shadow-[0px_4px_11px_2px_rgba(0,0,0,0.2),0px_-1px_1px_0px_rgba(7,10,13,0.14)_inset,0px_1px_2px_0px_rgba(246,248,249,0.5)_inset]\",\n        light:\n          \"border-gray-200 bg-white text-gray-700 shadow-[inset_0px_1px_2px_0px_rgba(246,248,249,0.50),inset_0px_-1px_1px_0px_rgba(7,10,13,0.14),0px_5px_20px_0px_rgba(0,0,0,0.10),0px_10px_40px_0px_rgba(0,0,0,0.03)]\",\n      },\n      isRichContent: {\n        true: \"p-2\",\n        false: \"px-2 py-1\",\n      },\n    },\n  }\n);\n\n/**\n * A popup that displays additional information when hovering over or focusing on an element. {@link https://compass-ui.dev/?path=/docs/overlay-tooltip |  **Storybook docs**}\n * @param content - The content to display in the tooltip.\n * @param title - Optional title displayed above the content.\n * @param children - The trigger element that the tooltip appears from.\n * @param appearance - Visual style of the tooltip ('dark' or 'light').\n * @param side - Preferred placement of the tooltip ('top', 'right', 'bottom', 'left').\n * @param align - Alignment of the tooltip relative to the trigger ('start', 'center', 'end').\n * @param offset - Distance in pixels between the tooltip and its trigger.\n * @param delayDuration - Delay in milliseconds before the tooltip appears.\n * @param withArrow - Whether to show an arrow pointing to the trigger.\n * @param open - Controls whether the tooltip is open when controlled.\n * @param onOpenChange - Callback fired when the open state changes.\n * @param styles - Custom styles to apply to different parts of the component.\n */\nexport function Tooltip({\n  children = <Icon name=\"info\" className=\"cursor-help text-gray-500\" />,\n  side = \"top\",\n  offset = 8,\n  align = \"center\",\n  title,\n  content,\n  appearance = \"dark\",\n  delayDuration = 300,\n  withArrow = false,\n  open,\n  onOpenChange,\n  className,\n  \"data-test-id\": dataTestId,\n  ...rest\n}: TooltipProps) {\n  return (\n    <RTooltip.Root\n      delayDuration={delayDuration}\n      open={open}\n      onOpenChange={onOpenChange}\n      {...rest}\n    >\n      <RTooltip.Trigger asChild>{children}</RTooltip.Trigger>\n\n      <RTooltip.Portal>\n        {content && (\n          <RTooltip.Content\n            className={cn(\n              tooltipVariants({\n                appearance,\n                isRichContent: typeof content !== \"string\",\n              }),\n              className\n            )}\n            side={side}\n            sideOffset={offset}\n            align={align}\n            data-test-id={dataTestId}\n          >\n            {title ? (\n              <p\n                className={cn(\"mb-1 text-xs font-medium\", {\n                  \"text-white\": appearance === \"dark\",\n                  \"text-gray-900\": appearance !== \"dark\",\n                })}\n              >\n                {title}\n              </p>\n            ) : null}\n            {content}\n            {withArrow && (\n              <RTooltip.Arrow\n                asChild\n                className={cn({\n                  \"fill-gray-900\": appearance === \"dark\",\n                  \"fill-white\": appearance !== \"dark\",\n                })}\n              >\n                <svg\n                  width=\"16\"\n                  height=\"14\"\n                  viewBox=\"0 0 24 12\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"-translate-y-px\"\n                >\n                  <path\n                    d=\"M24 1C20 1 18 5 12 5C6 5 4 1 0 1\"\n                    className={cn({\n                      \"fill-gray-900\": appearance === \"dark\",\n                      \"fill-white\": appearance !== \"dark\",\n                    })}\n                  />\n                </svg>\n              </RTooltip.Arrow>\n            )}\n          </RTooltip.Content>\n        )}\n      </RTooltip.Portal>\n    </RTooltip.Root>\n  );\n}\n\nexport type TooltipProviderProps = RadixTooltipProviderProps;\n\n/**\n * Aliasing the Radix tooltip provider here so that we don't have to add\n * dependencies to the main project.\n */\nexport function TooltipProvider(props: TooltipProviderProps) {\n  return <RadixTooltipProvider {...props} />;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAKA;AAEA;AACA;;;;;;;;AAVA;;;;;;;AA0BA,MAAM,kBAAkB,CAAA,GAAA,4JAAA,CAAA,MAAG,AAAD,EACxB;IACE;IACA;IACA;IACA;IACA;IACA;CACD,EACD;IACE,UAAU;QACR,YAAY;YACV,MAAM;YACN,OACE;QACJ;QACA,eAAe;YACb,MAAM;YACN,OAAO;QACT;IACF;AACF;AAkBK,SAAS,QAAQ,EACtB,yBAAW,qKAAC,mHAAA,CAAA,OAAI;IAAC,MAAK;IAAO,WAAU;;;;;4CAA8B,EACrE,OAAO,KAAK,EACZ,SAAS,CAAC,EACV,QAAQ,QAAQ,EAChB,KAAK,EACL,OAAO,EACP,aAAa,MAAM,EACnB,gBAAgB,GAAG,EACnB,YAAY,KAAK,EACjB,IAAI,EACJ,YAAY,EACZ,SAAS,EACT,gBAAgB,UAAU,EAC1B,GAAG,MACU;IACb,qBACE,qKAAC,kKAAA,CAAA,OAAa;QACZ,eAAe;QACf,MAAM;QACN,cAAc;QACb,GAAG,IAAI;;0BAER,qKAAC,kKAAA,CAAA,UAAgB;gBAAC,OAAO;0BAAE;;;;;;0BAE3B,qKAAC,kKAAA,CAAA,SAAe;0BACb,yBACC,qKAAC,kKAAA,CAAA,UAAgB;oBACf,WAAW,CAAA,GAAA,2GAAA,CAAA,KAAE,AAAD,EACV,gBAAgB;wBACd;wBACA,eAAe,OAAO,YAAY;oBACpC,IACA;oBAEF,MAAM;oBACN,YAAY;oBACZ,OAAO;oBACP,gBAAc;;wBAEb,sBACC,qKAAC;4BACC,WAAW,CAAA,GAAA,2GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;gCACxC,cAAc,eAAe;gCAC7B,iBAAiB,eAAe;4BAClC;sCAEC;;;;;mCAED;wBACH;wBACA,2BACC,qKAAC,kKAAA,CAAA,QAAc;4BACb,OAAO;4BACP,WAAW,CAAA,GAAA,2GAAA,CAAA,KAAE,AAAD,EAAE;gCACZ,iBAAiB,eAAe;gCAChC,cAAc,eAAe;4BAC/B;sCAEA,cAAA,qKAAC;gCACC,OAAM;gCACN,QAAO;gCACP,SAAQ;gCACR,MAAK;gCACL,OAAM;gCACN,WAAU;0CAEV,cAAA,qKAAC;oCACC,GAAE;oCACF,WAAW,CAAA,GAAA,2GAAA,CAAA,KAAE,AAAD,EAAE;wCACZ,iBAAiB,eAAe;wCAChC,cAAc,eAAe;oCAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUpB;AAQO,SAAS,gBAAgB,KAA2B;IACzD,qBAAO,qKAAC,kKAAA,CAAA,kBAAoB;QAAE,GAAG,KAAK;;;;;;AACxC","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///Users/viya/dev/cp-fileupload/src/pages/_app.tsx"],"sourcesContent":["import { TooltipProvider } from \"@/components/Tooltip\";\nimport \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <TooltipProvider>\n      <Component {...pageProps} />\n    </TooltipProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAIe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,sHAAA,CAAA,kBAAe;kBACd,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B","debugId":null}}]
}