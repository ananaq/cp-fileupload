/* [project]/src/styles/globals.css [client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
    }

    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-50: #fef1f1;
    --color-red-100: #fee1e1;
    --color-red-200: #fec8c8;
    --color-red-300: #fca6a6;
    --color-red-500: #ef4343;
    --color-red-600: #dc2828;
    --color-red-800: #981b1b;
    --color-red-900: #811d1d;
    --color-orange-100: #ffedd6;
    --color-orange-400: #fb923c;
    --color-orange-500: #f97415;
    --color-orange-800: #9b3412;
    --color-green-50: #ebfaf6;
    --color-green-100: #e4f7f3;
    --color-green-200: #b7ebdf;
    --color-green-500: #19a974;
    --color-green-800: #096738;
    --color-blue-50: #f5fbff;
    --color-blue-100: #e6eeff;
    --color-blue-200: #c7e4fa;
    --color-blue-300: #a1cdf7;
    --color-blue-500: #286ef0;
    --color-blue-600: #1c62e3;
    --color-blue-700: #1541b2;
    --color-blue-900: #071e69;
    --color-gray-50: #f6f8f9;
    --color-gray-100: #f0f2f4;
    --color-gray-200: #e5e7eb;
    --color-gray-300: #dde0e4;
    --color-gray-400: #9ca3b0;
    --color-gray-500: #6b7280;
    --color-gray-600: #4b5563;
    --color-gray-700: #384252;
    --color-gray-800: #1d2735;
    --color-gray-900: #070a0d;
    --color-white: #fff;
    --spacing: .25rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-4xl: 56rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-lg: .5rem;
    --radius-xl: .75rem;
    --radius-2xl: 1rem;
    --animate-spin: spin 1s linear infinite;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --shadow-button-base-layered: 0px 1px 1px 0px rgba(0, 0, 0, .1), 0px 2px 3px 0px rgba(0, 0, 0, .08), 1px 4px 8px 0px rgba(0, 0, 0, .12);
    --shadow-gray-button-inset-skeuo: 0px -3px 2px 0px rgba(0, 0, 0, .4) inset, 0px 2px .4px 0px rgba(255, 255, 255, .14) inset;
    --shadow-blue-button-inset-skeuo: 0px -3px 2px 0px rgba(0, 0, 0, .2) inset, 0px 2px .4px 0px rgba(255, 255, 255, .14) inset;
    --shadow-red-button-inset-skeuo: 0px -3px 2px 0px rgba(0, 0, 0, .2) inset, 0px 2px .4px 0px rgba(255, 255, 255, .14) inset;
    --shadow-button-deep-inset-indented: 0px 3px 1px 0px rgba(0, 0, 0, .2) inset, 0px 0px 3px 0px rgba(0, 0, 0, .2) inset;
    --shadow-button-shallow-inset-indented: 0px 2px 1px 0px rgba(0, 0, 0, .05) inset;
  }
}

@layer base {
  *, :after, :before {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::-webkit-file-upload-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  ::-webkit-file-upload-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:-moz-any([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup option:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:-moz-any([multiple], [size])) optgroup option:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:is([multiple], [size])) optgroup option:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup option:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :where(select:-moz-any([multiple], [size])) optgroup option:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :where(select:is([multiple], [size])) optgroup option:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::-webkit-file-upload-button {
    margin-right: 4px;
  }

  :not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::file-selector-button {
    margin-right: 4px;
  }

  :not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::file-selector-button {
    margin-right: 4px;
  }

  :-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::-webkit-file-upload-button {
    margin-left: 4px;
  }

  :-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::file-selector-button {
    margin-left: 4px;
  }

  :is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::file-selector-button {
    margin-left: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  input:where([type="button"], [type="reset"], [type="submit"]) {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::file-selector-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  *, :after, :before {
    border-color: var(--color-gray-200);
  }

  ::backdrop {
    border-color: var(--color-gray-200);
  }

  ::-webkit-file-upload-button {
    border-color: var(--color-gray-200);
  }

  ::file-selector-button {
    border-color: var(--color-gray-200);
  }

  button:not(:disabled), [role="button"]:not(:disabled) {
    cursor: pointer;
  }

  h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
  }

  h1 {
    font-size: 2em;
  }

  h2 {
    font-size: 1.5em;
  }

  h3 {
    font-size: 1.17em;
  }

  h4 {
    font-size: 1em;
  }

  h5 {
    font-size: .83em;
  }

  h6 {
    font-size: .67em;
  }

  html {
    color: var(--color-gray-700);
  }
}

@layer components;

@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }

  .invisible {
    visibility: hidden;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .relative {
    position: relative;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .isolate {
    isolation: isolate;
  }

  .z-0 {
    z-index: 0;
  }

  .z-10 {
    z-index: 10;
  }

  .z-50 {
    z-index: 50;
  }

  .container {
    width: 100%;
  }

  @media (min-width: 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (min-width: 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (min-width: 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (min-width: 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (min-width: 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .-mr-12 {
    margin-right: calc(var(--spacing) * -12);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .-ml-12 {
    margin-left: calc(var(--spacing) * -12);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .inline {
    display: inline;
  }

  .inline-flex {
    display: inline-flex;
  }

  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-28 {
    height: calc(var(--spacing) * 28);
  }

  .h-full {
    height: 100%;
  }

  .max-h-32 {
    max-height: calc(var(--spacing) * 32);
  }

  .min-h-\[120px\] {
    min-height: 120px;
  }

  .min-h-\[200px\] {
    min-height: 200px;
  }

  .min-h-\[220px\] {
    min-height: 220px;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-32 {
    max-width: calc(var(--spacing) * 32);
  }

  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .-translate-y-px {
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-90 {
    --tw-scale-x: 90%;
    --tw-scale-y: 90%;
    --tw-scale-z: 90%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .-rotate-12 {
    rotate: -12deg;
  }

  .rotate-12 {
    rotate: 12deg;
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-help {
    cursor: help;
  }

  .cursor-not-allowed {
    cursor: not-allowed;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .resize {
    resize: both;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .items-center {
    align-items: center;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-items-center {
    justify-items: center;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-12 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
  }

  .gap-x-1\.5 {
    column-gap: calc(var(--spacing) * 1.5);
  }

  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }

  .self-center {
    align-self: center;
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-\[10px\] {
    border-radius: 10px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .rounded-xl {
    border-radius: var(--radius-xl);
  }

  .rounded-l-lg {
    border-top-left-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }

  .rounded-l-xl {
    border-top-left-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
  }

  .rounded-r-lg {
    border-top-right-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }

  .rounded-r-xl {
    border-top-right-radius: var(--radius-xl);
    border-bottom-right-radius: var(--radius-xl);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-\[1\.5px\] {
    border-style: var(--tw-border-style);
    border-width: 1.5px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .border-blue-200 {
    border-color: var(--color-blue-200);
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-blue-600 {
    border-color: var(--color-blue-600);
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-gray-900 {
    border-color: var(--color-gray-900);
  }

  .border-green-200 {
    border-color: var(--color-green-200);
  }

  .border-red-200 {
    border-color: var(--color-red-200);
  }

  .border-red-300 {
    border-color: var(--color-red-300);
  }

  .border-red-600 {
    border-color: var(--color-red-600);
  }

  .border-transparent {
    border-color: rgba(0, 0, 0, 0);
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-blue-500\/10 {
    background-color: rgba(40, 110, 240, .1);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/10 {
      background-color: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
    }
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .bg-green-50 {
    background-color: var(--color-green-50);
  }

  .bg-red-50 {
    background-color: var(--color-red-50);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-transparent {
    background-color: rgba(0, 0, 0, 0);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .fill-gray-900 {
    fill: var(--color-gray-900);
  }

  .fill-white {
    fill: var(--color-white);
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pr-0 {
    padding-right: calc(var(--spacing) * 0);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pr-2\.5 {
    padding-right: calc(var(--spacing) * 2.5);
  }

  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }

  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }

  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }

  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-2\.5 {
    padding-left: calc(var(--spacing) * 2.5);
  }

  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }

  .text-center {
    text-align: center;
  }

  .font-sans {
    font-family: var(--font-sans);
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-4 {
    --tw-leading: calc(var(--spacing) * 4);
    line-height: calc(var(--spacing) * 4);
  }

  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-blue-700 {
    color: var(--color-blue-700);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-red-600 {
    color: var(--color-red-600);
  }

  .text-red-800 {
    color: var(--color-red-800);
  }

  .text-red-900 {
    color: var(--color-red-900);
  }

  .text-white {
    color: var(--color-white);
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-50 {
    opacity: .5;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_4px_11px_2px_rgba\(0\,0\,0\,0\.2\)\,0px_-1px_1px_0px_rgba\(7\,10\,13\,0\.14\)_inset\,0px_1px_2px_0px_rgba\(246\,248\,249\,0\.5\)_inset\] {
    --tw-shadow: 0px 4px 11px 2px var(--tw-shadow-color, rgba(0, 0, 0, .2)), 0px -1px 1px 0px var(--tw-shadow-color, rgba(7, 10, 13, .14)) inset, 0px 1px 2px 0px var(--tw-shadow-color, rgba(246, 248, 249, .5)) inset;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[inset_0px_1px_2px_0px_rgba\(246\,248\,249\,0\.50\)\,inset_0px_-1px_1px_0px_rgba\(7\,10\,13\,0\.14\)\,0px_5px_20px_0px_rgba\(0\,0\,0\,0\.10\)\,0px_10px_40px_0px_rgba\(0\,0\,0\,0\.03\)\] {
    --tw-shadow: inset 0px 1px 2px 0px var(--tw-shadow-color, rgba(246, 248, 249, .5)), inset 0px -1px 1px 0px var(--tw-shadow-color, rgba(7, 10, 13, .14)), 0px 5px 20px 0px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0px 10px 40px 0px var(--tw-shadow-color, rgba(0, 0, 0, .03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-button-elevated {
    --tw-shadow: 0px 2px 3px 0px var(--tw-shadow-color, rgba(0, 0, 0, .03)), 0px 2px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0px 2px 2px 0px var(--tw-shadow-color, rgba(31, 40, 55, .02)), 0px 5px 5px 0px var(--tw-shadow-color, rgba(31, 40, 55, .02));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .\[box-shadow\:0px_-5px_0px_0px_var\(--color-gray-100\)_inset\] {
    box-shadow: 0px -5px 0px 0px var(--color-gray-100) inset;
  }

  .shadow-solid-blue-button-default {
    box-shadow: var(--shadow-button-base-layered), var(--shadow-blue-button-inset-skeuo);
  }

  .shadow-solid-gray-button-default {
    box-shadow: var(--shadow-button-base-layered), var(--shadow-gray-button-inset-skeuo);
  }

  .shadow-solid-red-button-default {
    box-shadow: var(--shadow-button-base-layered), var(--shadow-red-button-inset-skeuo);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .focus-outline:focus-visible {
    outline-style: var(--tw-outline-style) !important;
    outline-width: 1px !important;
  }

  .focus-outline:focus-visible {
    outline-offset: 1px !important;
  }

  .focus-outline:focus-visible {
    outline-color: rgba(7, 10, 13, .1) !important;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-outline:focus-visible {
      outline-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent) !important;
    }
  }

  .focus-outline:focus-visible {
    --tw-outline-style: solid !important;
    outline-style: solid !important;
  }

  .focus-outline-emphasized:focus-visible {
    outline-style: var(--tw-outline-style) !important;
    outline-width: 1px !important;
  }

  .focus-outline-emphasized:focus-visible {
    outline-offset: 1px !important;
  }

  .focus-outline-emphasized:focus-visible {
    outline-color: rgba(7, 10, 13, .3) !important;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-outline-emphasized:focus-visible {
      outline-color: color-mix(in oklab, var(--color-gray-900) 30%, transparent) !important;
    }
  }

  .focus-outline-emphasized:focus-visible {
    --tw-outline-style: solid !important;
    outline-style: solid !important;
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .select-none {
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
  }

  .group-focus-within\/field\:text-gray-900:is(:where(.group\/field):focus-within *) {
    color: var(--color-gray-900);
  }

  @media (hover: hover) {
    .group-hover\:bg-gray-200:is(:where(.group):hover *) {
      background-color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .group-hover\/field\:text-gray-800:is(:where(.group\/field):hover *) {
      color: var(--color-gray-800);
    }
  }

  .peer-focus-within\/input\:outline-1:is(:where(.peer\/input):focus-within ~ *) {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .peer-focus-within\/input\:outline-offset-1:is(:where(.peer\/input):focus-within ~ *) {
    outline-offset: 1px;
  }

  .peer-focus-within\/input\:outline-gray-900\/10:is(:where(.peer\/input):focus-within ~ *) {
    outline-color: rgba(7, 10, 13, .1);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .peer-focus-within\/input\:outline-gray-900\/10:is(:where(.peer\/input):focus-within ~ *) {
      outline-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
    }
  }

  .focus-within\:border-blue-500:focus-within {
    border-color: var(--color-blue-500);
  }

  .focus-within\:ring-1:focus-within {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-within\:ring-2:focus-within {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-within\:ring-blue-500\/20:focus-within {
    --tw-ring-color: rgba(40, 110, 240, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-within\:ring-blue-500\/20:focus-within {
      --tw-ring-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }

  .focus-within\:ring-gray-900\/10:focus-within {
    --tw-ring-color: rgba(7, 10, 13, .1);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-within\:ring-gray-900\/10:focus-within {
      --tw-ring-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
    }
  }

  .focus-within\:ring-red-500\/20:focus-within {
    --tw-ring-color: rgba(239, 67, 67, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-within\:ring-red-500\/20:focus-within {
      --tw-ring-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .focus-within\:ring-offset-1:focus-within {
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  @media (hover: hover) {
    .hover\:border-gray-300:hover {
      border-color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-gray-400:hover {
      border-color: var(--color-gray-400);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-50:hover {
      background-color: var(--color-gray-50);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-sm:hover {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus-visible\:border-red-200:focus-visible {
    border-color: var(--color-red-200);
  }

  .focus-visible\:bg-gray-100:focus-visible {
    background-color: var(--color-gray-100);
  }

  .focus-visible\:bg-red-200\/50:focus-visible {
    background-color: rgba(254, 200, 200, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:bg-red-200\/50:focus-visible {
      background-color: color-mix(in oklab, var(--color-red-200) 50%, transparent);
    }
  }

  .focus-visible\:text-gray-900:focus-visible {
    color: var(--color-gray-900);
  }

  .focus-visible\:shadow-solid-button-blue-focus:focus-visible {
    box-shadow: var(--shadow-blue-button-inset-skeuo);
  }

  .focus-visible\:shadow-solid-button-gray-focus:focus-visible {
    box-shadow: var(--shadow-gray-button-inset-skeuo);
  }

  .focus-visible\:shadow-solid-button-red-focus:focus-visible {
    box-shadow: var(--shadow-red-button-inset-skeuo);
  }

  .focus-visible\:outline-hidden:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus-visible\:outline-hidden:focus-visible {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-offset-1:focus-visible {
    outline-offset: 1px;
  }

  .focus-visible\:outline-blue-500\/50:focus-visible {
    outline-color: rgba(40, 110, 240, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:outline-blue-500\/50:focus-visible {
      outline-color: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
    }
  }

  .focus-visible\:outline-red-500\/10:focus-visible {
    outline-color: rgba(239, 67, 67, .1);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:outline-red-500\/10:focus-visible {
      outline-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
    }
  }

  .focus-visible\:outline-red-500\/50:focus-visible {
    outline-color: rgba(239, 67, 67, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:outline-red-500\/50:focus-visible {
      outline-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
    }
  }

  .enabled\:text-gray-700:enabled {
    color: var(--color-gray-700);
  }

  @media (hover: hover) {
    .group-hover\:enabled\:text-gray-800:is(:where(.group):hover *):enabled {
      color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .group-hover\:enabled\:text-gray-900:is(:where(.group):hover *):enabled {
      color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .group-hover\:enabled\:text-red-900:is(:where(.group):hover *):enabled {
      color: var(--color-red-900);
    }
  }

  .group-focus-visible\:enabled\:text-gray-800:is(:where(.group):focus-visible *):enabled {
    color: var(--color-gray-800);
  }

  .group-focus-visible\:enabled\:text-gray-900:is(:where(.group):focus-visible *):enabled {
    color: var(--color-gray-900);
  }

  .group-focus-visible\:enabled\:text-red-900:is(:where(.group):focus-visible *):enabled {
    color: var(--color-red-900);
  }

  .group-active\:enabled\:text-gray-800:is(:where(.group):active *):enabled {
    color: var(--color-gray-800);
  }

  .group-active\:enabled\:text-gray-900:is(:where(.group):active *):enabled {
    color: var(--color-gray-900);
  }

  .group-active\:enabled\:text-red-900:is(:where(.group):active *):enabled {
    color: var(--color-red-900);
  }

  .group-data-\[active\=true\]\:enabled\:text-gray-800:is(:where(.group)[data-active="true"] *):enabled {
    color: var(--color-gray-800);
  }

  .group-data-\[active\=true\]\:enabled\:text-gray-900:is(:where(.group)[data-active="true"] *):enabled {
    color: var(--color-gray-900);
  }

  .group-data-\[active\=true\]\:enabled\:text-red-900:is(:where(.group)[data-active="true"] *):enabled {
    color: var(--color-red-900);
  }

  .enabled\:focus-within\:text-gray-900:enabled:focus-within {
    color: var(--color-gray-900);
  }

  @media (hover: hover) {
    .enabled\:hover\:border-gray-200:enabled:hover {
      border-color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:border-red-200:enabled:hover {
      border-color: var(--color-red-200);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:bg-blue-600:enabled:hover {
      background-color: var(--color-blue-600);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:bg-gray-50:enabled:hover {
      background-color: var(--color-gray-50);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:bg-gray-100:enabled:hover {
      background-color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:bg-gray-700:enabled:hover {
      background-color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:bg-red-200\/50:enabled:hover {
      background-color: rgba(254, 200, 200, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .enabled\:hover\:bg-red-200\/50:enabled:hover {
        background-color: color-mix(in oklab, var(--color-red-200) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:bg-red-600:enabled:hover {
      background-color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:text-gray-900:enabled:hover {
      color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .enabled\:hover\:shadow-sm:enabled:hover {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .enabled\:active\:border-gray-100:enabled:active {
    border-color: var(--color-gray-100);
  }

  .enabled\:active\:border-red-200:enabled:active {
    border-color: var(--color-red-200);
  }

  .enabled\:active\:bg-gray-200:enabled:active {
    background-color: var(--color-gray-200);
  }

  .enabled\:active\:bg-red-200\/50:enabled:active {
    background-color: rgba(254, 200, 200, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .enabled\:active\:bg-red-200\/50:enabled:active {
      background-color: color-mix(in oklab, var(--color-red-200) 50%, transparent);
    }
  }

  .enabled\:active\:text-gray-900:enabled:active {
    color: var(--color-gray-900);
  }

  .enabled\:active\:shadow-button-shallow-inset-indented:enabled:active {
    --tw-shadow: 0px 2px 1px 0px var(--tw-shadow-color, rgba(0, 0, 0, .05)) inset;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .enabled\:active\:shadow-ghost-button-active:enabled:active {
    box-shadow: var(--shadow-button-shallow-inset-indented);
  }

  .enabled\:active\:shadow-solid-button-active:enabled:active {
    box-shadow: var(--shadow-button-deep-inset-indented);
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .enabled\:data-\[active\=true\]\:border-gray-100:enabled[data-active="true"] {
    border-color: var(--color-gray-100);
  }

  .enabled\:data-\[active\=true\]\:border-red-200:enabled[data-active="true"] {
    border-color: var(--color-red-200);
  }

  .enabled\:data-\[active\=true\]\:bg-gray-200:enabled[data-active="true"] {
    background-color: var(--color-gray-200);
  }

  .enabled\:data-\[active\=true\]\:bg-red-200\/50:enabled[data-active="true"] {
    background-color: rgba(254, 200, 200, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .enabled\:data-\[active\=true\]\:bg-red-200\/50:enabled[data-active="true"] {
      background-color: color-mix(in oklab, var(--color-red-200) 50%, transparent);
    }
  }

  .enabled\:data-\[active\=true\]\:text-gray-900:enabled[data-active="true"] {
    color: var(--color-gray-900);
  }

  .enabled\:data-\[active\=true\]\:shadow-button-shallow-inset-indented:enabled[data-active="true"] {
    --tw-shadow: 0px 2px 1px 0px var(--tw-shadow-color, rgba(0, 0, 0, .05)) inset;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .enabled\:data-\[active\=true\]\:shadow-ghost-button-active:enabled[data-active="true"] {
    box-shadow: var(--shadow-button-shallow-inset-indented);
  }

  .enabled\:data-\[active\=true\]\:shadow-solid-button-active:enabled[data-active="true"] {
    box-shadow: var(--shadow-button-deep-inset-indented);
  }

  .data-\[state\=on\]\:border-gray-100[data-state="on"] {
    border-color: var(--color-gray-100);
  }

  .data-\[state\=on\]\:border-red-200[data-state="on"] {
    border-color: var(--color-red-200);
  }

  .data-\[state\=on\]\:bg-gray-50[data-state="on"] {
    background-color: var(--color-gray-50);
  }

  .data-\[state\=on\]\:bg-gray-200[data-state="on"] {
    background-color: var(--color-gray-200);
  }

  .data-\[state\=on\]\:bg-red-200\/50[data-state="on"] {
    background-color: rgba(254, 200, 200, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[state\=on\]\:bg-red-200\/50[data-state="on"] {
      background-color: color-mix(in oklab, var(--color-red-200) 50%, transparent);
    }
  }

  .data-\[state\=on\]\:text-gray-900[data-state="on"] {
    color: var(--color-gray-900);
  }

  .data-\[state\=on\]\:text-red-900[data-state="on"] {
    color: var(--color-red-900);
  }

  .data-\[state\=on\]\:shadow-button-shallow-inset-indented[data-state="on"] {
    --tw-shadow: 0px 2px 1px 0px var(--tw-shadow-color, rgba(0, 0, 0, .05)) inset;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .data-\[state\=on\]\:shadow-ghost-button-active[data-state="on"] {
    box-shadow: var(--shadow-button-shallow-inset-indented);
  }

  .data-\[state\=on\]\:shadow-solid-button-active[data-state="on"] {
    box-shadow: var(--shadow-button-deep-inset-indented);
  }

  @media (min-width: 40rem) {
    .sm\:p-20 {
      padding: calc(var(--spacing) * 20);
    }
  }

  @media (min-width: 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
}

body {
  background: var(--color-white);
  color: var(--color-gray-700);
  font-family: Inter, sans-serif;
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/*# sourceMappingURL=src_styles_globals_4738091e.css.map*/